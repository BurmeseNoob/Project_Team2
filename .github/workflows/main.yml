name: Java Querying  App
on: push
jobs:
  UnitTests:
    name: Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Unit Tests
        run: mvn -Dtest=UnitTest.SpecificPopulationReportTest test -DfailIfNoTests=false
  IntegrationTests:
    name: Integration Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Integration Tests
        run: |
          docker build -t database ./db
          docker run --name world -dp 33061:3306 database
          mvn -Dtest=IntegrationTest.AppIntegrationTest test
          docker stop world
          docker rm world
          docker image rm database
  build:
    name: Build Run in Docker and Deploy Release
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Package and Run Docker Compose
        run: |
          mvn package -DskipTests -X  
          docker-compose up -d 
          sleep 30 
          docker-compose logs
      - name: Stop and Remove Docker Containers
        run: |
          docker-compose down
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: "latest"
          files: |
            ./target/*.jar
#  build:
#    name: Build and Start Using docker-compose and run app
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Set up JDK 17
#        uses: actions/setup-java@v2
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#      - name: Package and Run docker compose
#        run: |
#          mvn package
#          docker compose up --abort-on-container-exit